{"version":3,"sources":["AdaptiveScreen.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAC5C;;GAEG;AAEH;IAA4C,kCAAY;IADxD;QAAA,qEAuDC;QArDG;;UAEE;QAKF,YAAM,GAAY,IAAI,CAAC;QACvB,YAAY;QAEL,eAAS,GAAW,GAAG,CAAC;QAC/B,YAAY;QAEL,gBAAU,GAAW,IAAI,CAAC;;QAuCjC,iBAAiB;IACrB,CAAC;IApCG,+BAAM,GAAN;QACI,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IACD,8BAAK,GAAL;QACI,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IACD;;MAEE;IACK,sCAAa,GAApB;QACI,IAAI,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE;YACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;YACrC,IAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC;YAChC,IAAI,OAAO,GAAY,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;YAC9C,2BAA2B;YAC3B,wCAAwC;YACxC,uCAAuC;YACvC,yCAAyC;YACzC,IAAI,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,gBAAgB,CAAC,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE;gBACjG,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACvB,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;aAC5B;iBACI;gBACD,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;gBACxB,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;aAC3B;SACJ;IACL,CAAC;IACD,+BAAM,GAAN;QACI,IAAI,OAAO,GAAY,EAAE,CAAC,OAAO,CAAC;QAClC,IAAI,MAAM,GAAG,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;QAC5C,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC;QAE9C,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACrD,CAAC;IA5CD;QAJC,QAAQ,CAAC;YACN,IAAI,EAAE,EAAE,CAAC,IAAI;YACb,OAAO,EAAE,cAAc;SAC1B,CAAC;kDACqB;IAGvB;QADC,QAAQ;qDACsB;IAG/B;QADC,QAAQ;sDACwB;IAdhB,cAAc;QADlC,OAAO;OACa,cAAc,CAsDlC;IAAD,qBAAC;CAtDD,AAsDC,CAtD2C,EAAE,CAAC,SAAS,GAsDvD;kBAtDoB,cAAc","file":"","sourceRoot":"../../../../../assets/scripts/Utils","sourcesContent":["const { ccclass, property } = cc._decorator;\n/**\n * 自适应代码\n */\n@ccclass\nexport default class AdaptiveScreen extends cc.Component {\n    /**\n    * 全屏背景图片，用于自适应\n    */\n    @property({\n        type: cc.Node,\n        tooltip: \"全屏背景图片，用于自适应\"\n    })\n    bgNode: cc.Node = null;\n    /**舞台设计宽度 */\n    @property\n    public viewWidth: number = 640;\n    /**舞台设计高度 */\n    @property\n    public viewHeight: number = 1136;\n\n    /**当前场景 舞台 */\n    public stage: cc.Node;\n    onLoad() {\n        this.screenAdapter();\n    }\n    start() {\n        this.viewUp();\n    }\n    /**\n    * 自适应\n    */\n    public screenAdapter() {\n        if (cc.Canvas.instance) {\n            this.stage = cc.Canvas.instance.node;\n            let canvas = cc.Canvas.instance;\n            let winSize: cc.Size = cc.view.getFrameSize();\n            // console.log(cc.winSize);\n            // console.log(cc.view.getCanvasSize());\n            // console.log(cc.view.getFrameSize());\n            // console.log(cc.view.getVisibleSize());\n            if (winSize.width / winSize.height < canvas.designResolution.width / canvas.designResolution.height) {\n                canvas.fitWidth = true;\n                canvas.fitHeight = false;\n            }\n            else {\n                canvas.fitHeight = true;\n                canvas.fitWidth = false;\n            }\n        }\n    }\n    viewUp() {\n        let winSize: cc.Size = cc.winSize;\n        let scaleX = winSize.width / this.viewWidth;\n        let scaleY = winSize.height / this.viewHeight;\n\n        this.bgNode.scale = 1 * Math.max(scaleX, scaleY);\n    }\n    // update (dt) {}\n}\n"]}