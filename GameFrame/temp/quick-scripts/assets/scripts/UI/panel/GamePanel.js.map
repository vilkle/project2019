{"version":3,"sources":["GamePanel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oCAAmC;AACnC,8CAA6C;AAC7C,0DAAqD;AAQ/C,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAG5C;IAAuC,6BAAM;IAD7C;QAAA,qEA8EC;QA1EW,eAAS,GAAW,IAAI,CAAC;QACzB,YAAM,GAAW,CAAC,CAAA;QAClB,mBAAa,GAAW,CAAC,CAAA;QACzB,gBAAU,GAAG;YACjB,QAAQ,EAAE,CAAC;YACX,OAAO,EAAE,CAAC;YACV,SAAS,EAAE,EAEV;YACD,MAAM,EAAE,CAAC;SACZ,CAAA;;IAgEL,CAAC;IA5DG,0BAAM,GAAN;IAEA,CAAC;IAED,yBAAK,GAAL;QACI,uBAAa,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAChF,CAAC;IAED,4BAAQ,GAAR;IAEA,CAAC;IAED,2BAAO,GAAP;QACI,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC;gBAC3B,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI;gBACb,MAAM,EAAE,CAAC;aACZ,CAAC,CAAA;SACL;IACL,CAAC;IAED,6BAAS,GAAT;QACI,mBAAmB;QACnB,IAAI,uBAAa,CAAC,cAAc,EAAE;YAC9B,uBAAa,CAAC,WAAW,EAAE,CAAC,aAAa,CAAC,QAAQ,EAAE;gBAChD,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC;aAC9C,CAAC,CAAC;YACH,uBAAa,CAAC,cAAc,GAAG,KAAK,CAAC;SACxC;QACD,wCAAwC;QACxC,uBAAa,CAAC,WAAW,EAAE,CAAC,aAAa,CAAC,cAAc,EAAE,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;IAClH,CAAC;IAED,6BAAS,GAAT;IAEA,CAAC;IAED,0BAAM,GAAN;IACA,CAAC;IAID,0BAAM,GAAN;QACI,iBAAO,CAAC,WAAW,EAAE,CAAC,WAAW,CAAC,iBAAO,CAAC,YAAY,GAAG,iBAAiB,GAAG,iBAAO,CAAC,aAAa,EAAE,KAAK,EAAE,gCAAgC,EAAE,UAAU,GAAG,EAAE,QAAQ;YAChK,IAAI,CAAC,GAAG,EAAE;gBACN,IAAI,aAAa,GAAG,QAAQ,CAAC;gBAC7B,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;oBACnC,OAAO;iBACV;gBACD,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBAChE,IAAI,OAAO,IAAI,IAAI,EAAE;oBACjB,IAAI,CAAC,QAAQ,EAAE,CAAC;iBACnB;aACJ;iBAAM;gBACH,IAAI,CAAC,QAAQ,EAAE,CAAC;aACnB;QACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;IACxB,CAAC;IA7DgB,mBAAS,GAAG,WAAW,CAAC;IAZzC;QADC,QAAQ,CAAE,EAAE,CAAC,IAAI,CAAC;gDACc;IAHhB,SAAS;QAD7B,OAAO;OACa,SAAS,CA6E7B;IAAD,gBAAC;CA7ED,AA6EC,CA7EsC,eAAM,GA6E5C;kBA7EoB,SAAS","file":"","sourceRoot":"../../../../../../assets/scripts/UI/panel","sourcesContent":["import { BaseUI } from \"../BaseUI\";\nimport { NetWork } from \"../../Http/NetWork\";\nimport DataReporting from \"../../Data/DataReporting\";\nimport {ConstValue} from \"../../Data/ConstValue\"\nimport { DaAnData } from \"../../Data/DaAnData\";\nimport { UIManager } from \"../../Manager/UIManager\";\nimport UploadAndReturnPanel from \"./UploadAndReturnPanel\";\nimport { UIHelp } from \"../../Utils/UIHelp\";\nimport { AudioManager } from \"../../Manager/AudioManager\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class GamePanel extends BaseUI {\n\n    @property (cc.Node)\n    private node_test:cc.Node = null;\n    private isOver: number = 0\n    private checkpointNum: number = 0\n    private eventvalue = {\n        isResult: 1,\n        isLevel: 1,\n        levelData: [\n\n        ],\n        result: 4\n    }\n\n    protected static className = \"GamePanel\";\n\n    onLoad() {\n\n    }\n\n    start() {\n        DataReporting.getInstance().addEvent('end_game', this.onEndGame.bind(this));\n    }\n\n    setPanel() {\n        \n    }\n\n    addData() {\n        for(let i = 0; i < this.checkpointNum; i++) {\n            this.eventvalue.levelData.push({\n                answer: null,\n                subject: null,\n                result: 4\n            })\n        }\n    }\n\n    onEndGame() {\n        //如果已经上报过数据 则不再上报数据\n        if (DataReporting.isRepeatReport) {\n            DataReporting.getInstance().dispatchEvent('addLog', {\n                eventType: 'clickSubmit',\n                eventValue: JSON.stringify(this.eventvalue)\n            });\n            DataReporting.isRepeatReport = false;\n        }\n        //eventValue  0为未答题   1为答对了    2为答错了或未完成\n        DataReporting.getInstance().dispatchEvent('end_finished', { eventType: 'activity', eventValue: this.isOver });\n    }\n\n    onDestroy() {\n\n    }\n\n    onShow() {\n    }\n\n   \n\n    getNet() {\n        NetWork.getInstance().httpRequest(NetWork.GET_QUESTION + \"?courseware_id=\" + NetWork.courseware_id, \"GET\", \"application/json;charset=utf-8\", function (err, response) {\n            if (!err) {\n                let response_data = response;\n                if (Array.isArray(response_data.data)) {\n                    return;\n                }\n                let content = JSON.parse(response_data.data.courseware_content);\n                if (content != null) {\n                    this.setPanel();\n                }\n            } else {\n                this.setPanel();\n            }\n        }.bind(this), null);\n    }\n}\n"]}