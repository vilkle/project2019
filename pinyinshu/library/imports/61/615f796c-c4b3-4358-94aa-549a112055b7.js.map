{"version":3,"sources":["../../../../../assets/scripts/Utils/assets/scripts/Utils/LogWrap.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/scripts/Utils","sourcesContent":["let OPENLOGFLAG = true;\n\nexport class LogWrap\n{\n    private static getDateString(): string\n    {\n        let d = new Date();\n        let str = d.getHours().toString();\n        let timeStr = \"\";\n        timeStr += (str.length==1? \"0\"+str : str) + \":\";\n        str = d.getMinutes().toString();\n        timeStr += (str.length==1? \"0\"+str : str) + \":\";\n        str = d.getSeconds().toString();\n        timeStr += (str.length==1? \"0\"+str : str) + \":\";\n        str = d.getMilliseconds().toString();\n        if( str.length==1 ) str = \"00\"+str;\n        if( str.length==2 ) str = \"0\"+str;\n        timeStr += str;\n\n        timeStr = \"[\" + timeStr + \"]\";\n        return timeStr;\n    }\n\n    private static stack(index): string\n    {\n        var e = new Error();\n        var lines = e.stack.split(\"\\n\");\n        lines.shift();\n        var result = [];\n        lines.forEach(function (line) {\n            line = line.substring(7);\n            var lineBreak = line.split(\" \");\n            if (lineBreak.length<2) {\n                result.push(lineBreak[0]);\n            } else {\n                result.push({[lineBreak[0]] : lineBreak[1]});\n            }\n        });\n\n        var list = [];\n        if(index < result.length-1){\n            for(var a in result[index]){\n                list.push(a);\n            }\n        }\n\n        var splitList = list[0].split(\".\");\n        return (splitList[0] + \".js->\" + splitList[1] + \": \");\n    }\n\n    public static log(...args)\n    {\n        var backLog = console.log || cc.log// || log;\n        if(OPENLOGFLAG){\n            backLog.call(this,\"%s%s:\"+cc.js.formatStr.apply(cc,arguments),LogWrap.stack(2),LogWrap.getDateString());\n        }\n    }\n\n    public static info(...args)\n    {\n        var backLog = console.log || cc.log// || log;\n        if(OPENLOGFLAG){\n            backLog.call(this,\"%c%s%s:\"+cc.js.formatStr.apply(cc,arguments),\"color:#00CD00;\",LogWrap.stack(2),LogWrap.getDateString());\n        }\n    }\n\n    public static warn(...args)\n    {\n        var backLog = console.log || cc.log// || log;\n        if(OPENLOGFLAG){\n            backLog.call(this,\"%c%s%s:\"+cc.js.formatStr.apply(cc,arguments),\"color:#ee7700;\",LogWrap.stack(2),LogWrap.getDateString());\n            //cc.warn\n        }\n    }\n\n    public static err(...args)\n    {\n        var backLog = console.log || cc.log// || log;\n        if(OPENLOGFLAG){\n            backLog.call(this,\"%c%s%s:\"+cc.js.formatStr.apply(cc,arguments),\"color:red\",LogWrap.stack(2),LogWrap.getDateString());\n        }\n    }\n}"]}