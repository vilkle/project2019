{"version":3,"sources":["GamePanel.ts"],"names":[],"mappings":";;;;;AAAA,oCAAmC;AACnC,gDAA6C;AAG7C,8CAA2C;AAC3C,oDAAmD;AACnD,qDAAoD;AAEpD,iEAA8D;AAC9D,wDAAqD;AAE/C,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAG5C;IAAuC,6BAAM;IAA7C;;IA4EA,CADK,AACJ;kBA5EoB,SAAS;IAazB,0BAAM,GAAN;QACG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAED,yBAAK,GAAL;QACA,2BAA2B;QAC3B,8BAA8B;IAC9B,CAAC;IAGD,6BAAS,GAAT;IAEA,CAAC;IAEF,0BAAM,GAAN,UAAQ,EAAE;QACL,IAAG,IAAI,CAAC,OAAO,EAAE;YACb,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACjB,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;SAEd;IACN,CAAC;IAEA,4BAAQ,GAAR;QACI,IAAG,uBAAU,CAAC,UAAU,EAAE;SAEzB;aAAK;SAEL;IACL,CAAC;IAED,4BAAQ,GAAR;QACI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACnB,CAAC;IAGD,0BAAM,GAAN;QACI,iBAAO,CAAC,WAAW,EAAE,CAAC,WAAW,CAAC,iBAAO,CAAC,YAAY,GAAG,iBAAiB,GAAG,iBAAO,CAAC,aAAa,EAAE,KAAK,EAAE,gCAAgC,EAAE,UAAU,GAAG,EAAE,QAAQ;YAChK,IAAI,CAAC,GAAG,EAAE;gBACN,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACzC,IAAI,aAAa,CAAC,IAAI,CAAC,kBAAkB,IAAI,IAAI,EAAE;iBAClD;qBAAM;oBACJ,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;oBAE7D,IAAG,IAAI,CAAC,MAAM,EAAE;wBACX,mBAAQ,CAAC,WAAW,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;qBAChD;oBACD,IAAG,IAAI,CAAC,cAAc,EAAE;wBACnB,mBAAQ,CAAC,WAAW,EAAE,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;qBAChE;iBAEH;aACJ;QACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;IACxB,CAAC;IACD,8BAAU,GAAV;QACI,qBAAS,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,WAAS,CAAC,CAAC;QAC3C,iCAAe,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,2BAAY,CAAC,oBAAoB,EAAE,EAAC,KAAK,EAAE,CAAC,EAAC,CAAC,CAAC;IACzF,CAAC;IACD,gCAAY,GAAZ;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,kDAAkD;IACtD,CAAC;;IAzEgB,mBAAS,GAAG,WAAW,CAAC;IAIzC;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;2CACH;IAEjB;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;6CACD;IARF,SAAS;QAD7B,OAAO;OACa,SAAS,CA2EzB;IACL,gBAAC;CA5ED,AA2EK,CA3EkC,eAAM,GA2ExC;kBA3EgB,SAAS","file":"","sourceRoot":"../../../../../../assets/scripts/UI/panel","sourcesContent":["import { BaseUI } from \"../BaseUI\";\nimport {DaAnData} from \"../../Data/DaAnData\";\nimport {UIHelp} from \"../../Utils/UIHelp\";\nimport {AudioManager} from \"../../Manager/AudioManager\";\nimport {NetWork} from \"../../Http/NetWork\";\nimport { ConstValue } from \"../../Data/ConstValue\";\nimport { UIManager } from \"../../Manager/UIManager\";\nimport SubmissionPanel from \"./SubmissionPanel\";\nimport {ListenerManager} from \"../../Manager/ListenerManager\";\nimport {ListenerType} from \"../../Data/ListenerType\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class GamePanel extends BaseUI {\n\n    protected static className = \"GamePanel\";\n\n  \n    @property(cc.Button)\n    back : cc.Button;\n    @property(cc.Button)\n    submit : cc.Button;\n   \n    isStart : boolean;\n    timer : number;\n    \n     onLoad () {\n        this.isTecher();\n        this.initData();\n    }\n\n    start() {\n    //    this.creatPicBoard();\n    //    this.creatAnswerBoard();\n    }\n   \n\n    onDestroy() {\n       \n    }\n\n   update (dt) {\n        if(this.isStart) {\n            this.timer += dt;\n            cc.log(dt);\n\n        }\n   }\n\n    isTecher() {\n        if(ConstValue.IS_TEACHER) {\n      \n        }else {\n            \n        }\n    }\n\n    initData() {\n        this.timer = 0;\n    }\n \n\n    getNet() {\n        NetWork.getInstance().httpRequest(NetWork.GET_QUESTION + \"?courseware_id=\" + NetWork.courseware_id, \"GET\", \"application/json;charset=utf-8\", function (err, response) {\n            if (!err) {\n                let response_data = JSON.parse(response);\n                if (response_data.data.courseware_content == null) {\n                } else {\n                   let data = JSON.parse(response_data.data.courseware_content);\n\n                   if(data.number) {\n                        DaAnData.getInstance().number = data.number;\n                   }\n                   if(data.checkpointsNum) {\n                        DaAnData.getInstance().checkpointsNum = data.checkpointsNum;\n                   }\n                  \n                }\n            } \n        }.bind(this), null);\n    }\n    backButton(){\n        UIManager.getInstance().closeUI(GamePanel);\n        ListenerManager.getInstance().trigger(ListenerType.OnEditStateSwitching, {state: 0}); \n    }\n    submitButton(){\n        this.isStart = true;\n        //UIManager.getInstance().openUI(SubmissionPanel);\n    }\n"]}