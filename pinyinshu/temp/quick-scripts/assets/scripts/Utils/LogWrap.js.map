{"version":3,"sources":["LogWrap.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/scripts/Utils","sourcesContent":["import { ConstValue } from \"../Data/ConstValue\";\n\n// let OPENLOGFLAG = true;\n\nexport class LogWrap {\n    private static getDateString(): string {\n        let d = new Date();\n        let str = d.getHours().toString();\n        let timeStr = \"\";\n        timeStr += (str.length == 1 ? \"0\" + str : str) + \":\";\n        str = d.getMinutes().toString();\n        timeStr += (str.length == 1 ? \"0\" + str : str) + \":\";\n        str = d.getSeconds().toString();\n        timeStr += (str.length == 1 ? \"0\" + str : str) + \":\";\n        str = d.getMilliseconds().toString();\n        if (str.length == 1) str = \"00\" + str;\n        if (str.length == 2) str = \"0\" + str;\n        timeStr += str;\n\n        timeStr = \"[\" + timeStr + \"]\";\n        return timeStr;\n    }\n\n    private static stack(index): string {\n        var e = new Error();\n        var lines = e.stack.split(\"\\n\");\n        lines.shift();\n        var result = [];\n        lines.forEach(function (line) {\n            line = line.substring(7);\n            var lineBreak = line.split(\" \");\n            if (lineBreak.length < 2) {\n                result.push(lineBreak[0]);\n            } else {\n                result.push({ [lineBreak[0]]: lineBreak[1] });\n            }\n        });\n\n        var list = [];\n        if (index < result.length - 1) {\n            for (var a in result[index]) {\n                list.push(a);\n            }\n        }\n\n        var splitList = list[0].split(\".\");\n        return (splitList[0] + \".js->\" + splitList[1] + \": \");\n    }\n\n    public static log(...args) {\n        var backLog = console.log || cc.log// || log;\n        if (!ConstValue.IS_EDITIONS) {\n            backLog.call(this, \"%s%s:\" + cc.js.formatStr.apply(cc, arguments), LogWrap.stack(2), LogWrap.getDateString());\n        }\n    }\n\n    public static info(...args) {\n        var backLog = console.log || cc.log// || log;\n        if (!ConstValue.IS_EDITIONS) {\n            backLog.call(this, \"%c%s%s:\" + cc.js.formatStr.apply(cc, arguments), \"color:#00CD00;\", LogWrap.stack(2), LogWrap.getDateString());\n        }\n    }\n\n    public static warn(...args) {\n        var backLog = console.log || cc.log// || log;\n        if (!ConstValue.IS_EDITIONS) {\n            backLog.call(this, \"%c%s%s:\" + cc.js.formatStr.apply(cc, arguments), \"color:#ee7700;\", LogWrap.stack(2), LogWrap.getDateString());\n            //cc.warn\n        }\n    }\n\n    public static err(...args) {\n        var backLog = console.log || cc.log// || log;\n        if (!ConstValue.IS_EDITIONS) {\n            backLog.call(this, \"%c%s%s:\" + cc.js.formatStr.apply(cc, arguments), \"color:red\", LogWrap.stack(2), LogWrap.getDateString());\n        }\n    }\n}"]}