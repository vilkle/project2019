{"version":3,"sources":["ShaderMaterial.ts"],"names":[],"mappings":";;;;;AACA,IAAM,YAAY,GAAG,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC;AAC9C,IAAM,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC;AAEvC;IAA4C,kCAAQ;IAChD,wBAAY,IAAY,EAAE,IAAa,EAAE,IAAa,EAAE,OAAe;QAAvE,YACI,kBAAM,KAAK,CAAC,SAKf;QAJG,IAAI,QAAQ,GAAG,EAAE,CAAC,QAAe,CAAC;QAClC,IAAI,GAAG,GAAG,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC;QACxC,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAC/D,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;IACrB,CAAC;IAEO,8BAAK,GAAb,UAAc,IAAY;QACtB,IAAI,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC;QACrC,IAAI,GAAG,GAAG,YAAY,CAAC,GAAG,CAAC;QAE3B,IAAI,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAChC,IAAI,CAAC,QAAQ,CACT,GAAG,CAAC,cAAc,EAClB,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,yBAAyB,EAClD,GAAG,CAAC,cAAc,EAClB,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,yBAAyB,CACrD,CAAC;QAEF,IAAI,QAAQ,GAAG,IAAI,QAAQ,CAAC,SAAS,CACjC,CAAC,aAAa,CAAC,EACf;YACI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,CAAC,gBAAgB,EAAE;YACpD,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC,YAAY,EAAE;YAC9C,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,YAAY,EAAE;YAC5C,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,YAAY,EAAE;YAC7C,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,WAAW,EAAE;YAC5C,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,WAAW,EAAE;SAC9C,EACD,CAAC,IAAI,CAAC,CACT,CAAC;QAEF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;QACjD,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;QACvC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,EAAE;YACzD,OAAO,EAAE,IAAI,CAAC,MAAM;YACpB,KAAK,EAAE,IAAI,CAAC,IAAI;YAChB,MAAM,EAAE,IAAI,CAAC,KAAK;YAClB,MAAM,EAAE,IAAI,CAAC,KAAK;YAClB,KAAK,EAAE,IAAI,CAAC,IAAI;SACnB,EAAE,EAAE,CAAC,CAAC;QACP,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC9B,CAAC;IAED,mCAAU,GAAV,UAAW,OAAO;QACd,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QACtD,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;QACvD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;IAC9C,CAAC;IAED,iCAAQ,GAAR,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QACf,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACnD,CAAC;IAED,+BAAM,GAAN,UAAO,CAAC,EAAE,CAAC,EAAE,CAAC;QACV,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC;IAED,gCAAO,GAAP,UAAQ,CAAC,EAAE,CAAC;QACR,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACjD,CAAC;IAED,gCAAO,GAAP,UAAQ,IAAI;QACR,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACjD,CAAC;IAED,+BAAM,GAAN,UAAO,GAAG;QACN,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC;IACL,qBAAC;AAAD,CAzFA,AAyFC,CAzF2C,QAAQ,GAyFnD","file":"","sourceRoot":"../../../../../assets/scripts/shader","sourcesContent":["\nconst renderEngine = cc.renderer.renderEngine;\nconst Material = renderEngine.Material;\n\nexport default class ShaderMaterial extends Material {\n    constructor(name: string, vert?: string, frag?: string, defines?: any[]) {\n        super(false);\n        let renderer = cc.renderer as any;\n        let lib = renderer._forward._programLib;\n        !lib._templates[name] && lib.define(name, vert, frag, defines);\n        this._init(name);\n    }\n\n    private _init(name: string) {\n        let renderer = renderEngine.renderer;\n        let gfx = renderEngine.gfx;\n\n        let pass = new renderer.Pass(name);\n        pass.setDepth(false, false);\n        pass.setCullMode(gfx.CULL_NONE);\n        pass.setBlend(\n            gfx.BLEND_FUNC_ADD,\n            gfx.BLEND_SRC_ALPHA, gfx.BLEND_ONE_MINUS_SRC_ALPHA,\n            gfx.BLEND_FUNC_ADD,\n            gfx.BLEND_SRC_ALPHA, gfx.BLEND_ONE_MINUS_SRC_ALPHA\n        );\n        \n        let mainTech = new renderer.Technique(\n            ['transparent'],\n            [\n                { name: 'texture', type: renderer.PARAM_TEXTURE_2D },\n                { name: 'color', type: renderer.PARAM_COLOR4 },\n                { name: 'pos', type: renderer.PARAM_FLOAT3 },\n                { name: 'size', type: renderer.PARAM_FLOAT2 },\n                { name: 'time', type: renderer.PARAM_FLOAT },\n                { name: 'num', type: renderer.PARAM_FLOAT }\n            ],\n            [pass]\n        );\n\n        this._texture = null;\n        this._color = { r: 1.0, g: 1.0, b: 1.0, a: 1.0 };\n        this._pos = { x: 0.0, y: 0.0, z: 0.0 };\n        this._size = { x: 0.0, y: 0.0 };\n        this._time = 0.0;\n        this._num = 0.0;\n        this._effect = this.effect = new renderer.Effect([mainTech], { \n            'color': this._color,\n            'pos': this._pos,\n            'size': this._size,\n            'time': this._time,\n            'num': this._num\n        }, []);\n        this._mainTech = mainTech;\n    }\n\n    setTexture(texture) {\n        this._texture = texture;\n        this._texture.update({ flipY: false, mipmap: false });\n        this._effect.setProperty('texture', texture.getImpl());\n        this._texIds['texture'] = texture.getId();\n    }\n\n    setColor(r, g, b, a) {\n        this._color.r = r;\n        this._color.g = g;\n        this._color.b = b;\n        this._color.a = a;\n        this._effect.setProperty('color', this._color);\n    }\n\n    setPos(x, y, z) {\n        this._pos.x = x;\n        this._pos.y = y;\n        this._pos.z = z;\n        this._effect.setProperty('pos', this._pos);\n    }\n\n    setSize(x, y) {\n        this._size.x = x;\n        this._size.y = y;\n        this._effect.setProperty('size', this._size);\n    }\n\n    setTime(time) {\n        this._time = time;\n        this._effect.setProperty('time', this._time);\n    }\n\n    setNum(num) {\n        this._num = num;\n        this._effect.setProperty('num', this._num);\n    }\n}"]}