{"version":3,"sources":["ShaderComponent.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\shader","sourcesContent":["import ShaderManager, { ShaderType } from \"./ShaderManager\";\nimport ShaderMaterial from \"./ShaderMaterial\";\n\nconst { ccclass, property, requireComponent, executeInEditMode } = cc._decorator;\n\nconst NeedUpdate = [ShaderType.Fluxay, ShaderType.FluxaySuper];\n\n@ccclass\n@executeInEditMode\n@requireComponent(cc.Sprite)\nexport default class ShaderComponent extends cc.Component {\n\n    @property({ type: cc.Enum(ShaderType), visible: false })\n    private _shader: ShaderType = ShaderType.Default;\n\n    @property({ type: cc.Enum(ShaderType) })\n    get shader() { return this._shader; }\n    set shader(type) {\n        this._shader = type;\n        this._applyShader();\n    }\n\n    private _color = cc.color();\n    private _start = 0;\n    private _material: ShaderMaterial;\n    get material() { return this._material; }\n\n    protected start() {\n        this.getComponent(cc.Sprite).setState(0);\n        this._applyShader();\n    }\n\n    protected update(dt) {\n        if (!this._material) return;\n        this._setShaderColor();\n        this._setShaderTime(dt);\n    }\n\n    private _applyShader() {\n        let shader = this._shader;\n        let sprite = this.getComponent(cc.Sprite);\n        let material = ShaderManager.useShader(sprite, shader);\n        this._material = material;\n        this._start = 0;\n        let clr = this._color;\n        clr.setR(255), clr.setG(255), clr.setB(255), clr.setA(255);\n        if (!material) return;\n        switch (shader) {\n            case ShaderType.Blur:\n            case ShaderType.GaussBlur:\n                material.setNum(0.03); //0-0.1\n                break;\n            default:\n                break;\n        }\n        this._setShaderColor();\n    }\n\n    private _setShaderColor() {\n        let node = this.node;\n        let c0 = node.color;\n        let c1 = this._color;\n        let r = c0.getR(), g = c0.getG(), b = c0.getB(), a = node.opacity;\n        let f = !1;\n        if (c1.getR() !== r) { c1.setR(r); f = !0; }\n        if (c1.getG() !== g) { c1.setG(g); f = !0; }\n        if (c1.getB() !== b) { c1.setB(b); f = !0; }\n        if (c1.getA() !== a) { c1.setA(a); f = !0; }\n        f && this._material.setColor(r / 255, g / 255, b / 255, a / 255);\n    }\n\n    private _setShaderTime(dt) {\n        if (NeedUpdate.indexOf(this._shader) >= 0) {\n            let start = this._start;\n            if (start > 65535) start = 0;\n            start += dt;\n            this._material.setTime(start);\n            this._start = start;\n        }\n    }\n}\n"]}