{"version":3,"sources":["LoadingUI.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oCAA4C;AAC5C,oDAAmD;AACnD,+CAA0C;AAC1C,yCAAoC;AACpC,qDAAoD;AACpD,8CAA6C;AAC7C,0DAAqD;AACrD,yDAAwD;AAElD,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAG5C;IAA+B,6BAAM;IADrC;QAAA,qEA0CC;QApCW,iBAAW,GAAmB,IAAI,CAAC;QAEnC,mBAAa,GAAa,IAAI,CAAC;QAE/B,gBAAU,GAAY,IAAI,CAAC;QAE3B,iBAAW,GAAG,KAAK,CAAC;;IA8BhC,CAAC;IA5BG,0BAAM,GAAN;QAAA,iBA2BC;QA1BG,iBAAO,CAAC,WAAW,EAAE,CAAC,UAAU,EAAE,CAAC;QAGnC,IAAI,UAAU,GAAG,UAAC,cAAsB,EAAE,UAAkB,EAAE,IAAS;YACnE,IAAI,CAAC,KAAI,CAAC,WAAW,EAAE;gBACnB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,iBAAO,CAAC,WAAW,EAAE,CAAC,gBAAgB,CAAC,cAAc,EAAE,EAAE,OAAO,EAAE,yBAAW,CAAC,WAAW,EAAE,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;aACrH;YACD,KAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,cAAc,GAAG,UAAU,CAAC;YACxD,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,UAAU,GAAG,GAAG,CAAC,CAAC;YAE1D,uBAAa,CAAC,WAAW,EAAE,CAAC,aAAa,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;YAC5D,KAAI,CAAC,aAAa,CAAC,MAAM,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC;YACnD,IAAI,IAAI,GAAG,cAAc,GAAG,UAAU,GAAG,GAAG,GAAG,GAAG,CAAC;YACnD,KAAI,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7B,CAAC,CAAC;QAEF,uBAAa,CAAC,WAAW,EAAE,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QAExD,IAAI,SAAS,GAAoB,uBAAU,CAAC,UAAU,CAAC,CAAC,CAAC,sBAAY,CAAC,CAAC,CAAC,mBAAS,CAAC;QAClF,qBAAS,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE;YAC/C,iBAAO,CAAC,WAAW,EAAE,CAAC,gBAAgB,CAAC,YAAY,EAAE,EAAE,OAAO,EAAE,yBAAW,CAAC,WAAW,EAAE,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;YAChH,uBAAa,CAAC,WAAW,EAAE,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;YACtD,uBAAa,CAAC,WAAW,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACnD,KAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAC7B,CAAC,EAAE,UAAU,CAAC,CAAC;IACnB,CAAC;IAtCgB,mBAAS,GAAG,WAAW,CAAC;IAGzC;QADC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC;kDACkB;IAE3C;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;oDACoB;IAEvC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;iDACiB;IAT1B,SAAS;QADrB,OAAO;OACK,SAAS,CAyCrB;IAAD,gBAAC;CAzCD,AAyCC,CAzC8B,eAAM,GAyCpC;AAzCY,8BAAS","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\UI\\panel","sourcesContent":["import { BaseUI, UIClass } from \"../BaseUI\";\nimport { ConstValue } from \"../../Data/ConstValue\";\nimport TeacherPanel from \"./TeacherPanel\";\nimport GamePanel from \"./GamePanel\";\nimport { UIManager } from \"../../Manager/UIManager\";\nimport { NetWork } from \"../../Http/NetWork\";\nimport DataReporting from \"../../Data/DataReporting\";\nimport { TimeManager } from \"../../Manager/TimeManager\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport class LoadingUI extends BaseUI {\n\n    protected static className = \"LoadingUI\";\n\n    @property(cc.ProgressBar)\n    private progressBar: cc.ProgressBar = null;\n    @property(cc.Label)\n    private progressLabel: cc.Label = null;\n    @property(cc.Node)\n    private dragonNode: cc.Node = null;\n\n    private isLoadStart = false;\n\n    onLoad() {\n        NetWork.getInstance().GetRequest();\n\n\n        let onProgress = (completedCount: number, totalCount: number, item: any) => {\n            if (!this.isLoadStart) {\n                this.isLoadStart = true;\n                NetWork.getInstance().LogJournalReport(\"ResLoadStart\", { curTime: TimeManager.getInstance().getNowFormatDate() });\n            }\n            this.progressBar.progress = completedCount / totalCount;\n            let value = Math.round(completedCount / totalCount * 100);\n\n            DataReporting.getInstance().dispatchEvent('loading', value);\n            this.progressLabel.string = value.toString() + '%';\n            let posX = completedCount / totalCount * 609 - 304;\n            this.dragonNode.x = posX;\n        };\n\n        DataReporting.getInstance().dispatchEvent('load start');\n\n        let openPanel: UIClass<BaseUI> = ConstValue.IS_TEACHER ? TeacherPanel : GamePanel;\n        UIManager.getInstance().openUI(openPanel, null, 0, () => {\n            NetWork.getInstance().LogJournalReport(\"ResLoadEnd\", { curTime: TimeManager.getInstance().getNowFormatDate() });\n            DataReporting.getInstance().dispatchEvent('load end');\n            DataReporting.getInstance().dispatchEvent('start');\n            this.node.active = false;\n        }, onProgress);\n    }\n}"]}