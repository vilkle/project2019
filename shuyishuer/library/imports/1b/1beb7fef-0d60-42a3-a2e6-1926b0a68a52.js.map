{"version":3,"sources":["../../../../../../assets/scripts/UI/Item/assets/scripts/UI/Item/count.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAAmC,yBAAY;IAD/C;QAAA,qEAiCC;QA7BG,gBAAU,GAAa,IAAI,CAAC;QAE5B,OAAO;QACP,gBAAU,GAAW,EAAE,CAAC;QACxB,SAAS;QACT,kBAAY,GAAW,CAAC,CAAC;;IAwB7B,CAAC;IAtBG,+BAAe,GAAf;QACI,SAAS;QACT,IAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/D,IAAI,SAAS,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACjE,OAAO;QACP,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;IAC5E,CAAC;IAED,6BAAa,GAAb;QACI,OAAO;QACP,IAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE,CAAC,CAAC;QACnE,IAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE,CAAC,CAAC;QAClE,IAAI,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE,CAAC,CAAC;QACrE,WAAW;QACX,IAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QACvD,OAAO,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAE3D,CAAC;IAED,qBAAK,GAAL;QACI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAA;IAC7C,CAAC;IA5BD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;6CACS;IAHX,KAAK;QADzB,OAAO;OACa,KAAK,CAgCzB;IAAD,YAAC;CAhCD,AAgCC,CAhCkC,EAAE,CAAC,SAAS,GAgC9C;kBAhCoB,KAAK","file":"","sourceRoot":"../../../../../../assets/scripts/UI/Item","sourcesContent":["const {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Count extends cc.Component {\n\n    @property(cc.Label)\n    countLabel: cc.Label = null;\n\n    // 摆动角度\n    turnRotate: number = 10;\n    // 摆动持续时间\n    turnDuration: number = 2;\n\n    setRepeatAction() {\n        // 设置摇摆动画\n        let turnLeft = cc.rotateTo(this.turnDuration, this.turnRotate);\n        let turnRight = cc.rotateTo(this.turnDuration, -this.turnRotate);\n        // 不断重复\n        this.node.runAction(cc.repeatForever(cc.sequence(turnLeft, turnRight)));\n    }\n\n    setDownAction() {\n        // 入场动画\n        let itemIn = cc.moveBy(.3, 0, -10).easing(cc.easeCubicActionOut());\n        let itemUp = cc.moveBy(.4, 0, 15).easing(cc.easeCubicActionOut());\n        let itemDown = cc.moveBy(.6, 0, -10).easing(cc.easeCubicActionOut());\n        // 入场之后开始摆动\n        let callback = cc.callFunc(this.setRepeatAction, this);\n        return cc.sequence(itemIn, itemUp, itemDown, callback);\n\n    }\n\n    start() {\n        this.node.runAction(this.setDownAction())\n    }\n}\n"]}