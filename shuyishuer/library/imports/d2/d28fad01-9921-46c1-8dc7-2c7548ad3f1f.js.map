{"version":3,"sources":["../../../../../assets/scripts/Utils/assets/scripts/Utils/BoundingBoxHelp.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/scripts/Utils","sourcesContent":["/**\n * Author: kouyaqi\n * Email: kouyaqi@100tal.com\n */\n\nconst {ccclass, property} = cc._decorator;\n\n/**\n * 处理sp.Skeleton的边界框的方法；\n * 将此脚本挂载到含有spine资源的节点；\n * 资源顶点越多，贴合越好，性能越低。\n * */\n@ccclass\nexport default class BoundingBoxHelp extends cc.Component {\n\n    private skeleton:sp.Skeleton = null\n\n    /**插槽的顶点数据 */\n    private vertices:number[] = []\n\n    /**转换得到的坐标 */\n    private positions:cc.Vec2[] = []\n\n    private getSkeleton(){\n        if(this.skeleton == null){\n            this.skeleton = this.node.getComponent(sp.Skeleton)\n        }\n        return this.skeleton\n    }\n\n    /**\n     * 获取插槽所绑定的边界框的世界坐标\n     * @param slotName 插槽名称\n     */\n    public getBoundingBoxWorldPositions(slotName:string):cc.Vec2[]{\n        let skeleton = this.getSkeleton()\n        if(skeleton == null){\n            console.warn('没有Spine资源！');\n            return this.positions\n        }\n\n        let boundingBoxSlot = skeleton.findSlot(slotName)\n        if(!boundingBoxSlot){\n            console.warn(`没有找到插槽： ${slotName}`);\n            return this.positions\n        }\n\n        let attachment = boundingBoxSlot.attachment\n        /** http://zh.esotericsoftware.com/spine-api-reference#BoundingBoxAttachment\n         * Transforms the attachment's local vertices to world coordinates. If the slot has attachmentVertices, they are used to deform the vertices.\n         *   See World transforms in the Spine Runtimes Guide.\n         */\n        attachment.computeWorldVertices(boundingBoxSlot, 0, attachment.worldVerticesLength, this.vertices, 0, 2)\n        \n        for(let i = 0; i < this.vertices.length; i+=2){\n            if(!this.positions[i/2]){\n                this.positions[i/2] = cc.Vec2.ZERO\n            }\n            this.positions[i/2].x = this.vertices[i]\n            this.positions[i/2].y = this.vertices[i + 1]\n        }\n\n        //此时的世界坐标是Spine内部的世界坐标，需要转换为Cocos里的世界坐标\n        for(let i = 0; i < this.positions.length; i++){\n            this.positions[i] = this.node.convertToWorldSpaceAR(this.positions[i])\n        }\n\n        return this.positions\n    }\n\n\n    /**\n     * 获取插槽所绑定的边界框相对于节点的坐标\n     * @param slotName 插槽名称\n     * @param node 相对节点\n     */\n    public getBoundingBoxRelativePositions(slotName:string, node:cc.Node):cc.Vec2[]{\n        let positions = this.getBoundingBoxWorldPositions(slotName)\n        for(let i = 0; i < positions.length; i++){\n            positions[i] = node.convertToNodeSpaceAR(positions[i])\n        }\n        return positions\n    }\n\n}\n"]}